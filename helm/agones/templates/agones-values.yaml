agones:
  featureGates: ""
  metrics:
    prometheusEnabled: true
    prometheusServiceDiscovery: true
    stackdriverEnabled: false
    stackdriverProjectID: ""
    stackdriverLabels: ""
  rbacEnabled: true
  registerServiceAccounts: true
  registerWebhooks: true
  registerApiService: true
  crds:
    install: true
    cleanupOnDelete: true
  serviceaccount:
    controller: agones-controller
    sdk: agones-sdk
    allocator: agones-allocator
  createPriorityClass: true
  priorityClassName: agones-system
  controller:
    resources: {}
      # requests:
      #   cpu: 1
      #   memory: 256Mi
    nodeSelector:
      kubernetes.io/os: linux
    annotations: {}
    tolerations:
      - key: "agones.dev/agones-system"
        operator: "Equal"
        value: "true"
        effect: "NoExecute"
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: agones.dev/agones-system
                  operator: Exists
    generateTLS: true
    safeToEvict: false
    persistentLogs: true
    persistentLogsSizeLimitMB: 10000
    logLevel: info
    numWorkers: 100
    apiServerQPS: 400
    apiServerQPSBurst: 500
    http:
      port: 8080
    healthCheck:
      initialDelaySeconds: 3
      periodSeconds: 3
      failureThreshold: 3
      timeoutSeconds: 1
  ping:
    install: true
    resources: {}
      # requests:
      #   cpu: 1
      #   memory: 256Mi
    nodeSelector:
      kubernetes.io/os: linux
    annotations: {}
    tolerations:
      - key: "agones.dev/agones-system"
        operator: "Equal"
        value: "true"
        effect: "NoExecute"
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: agones.dev/agones-system
                  operator: Exists
    replicas: 2
    http:
      expose: true
      response: ok
      port: 80
      serviceType: LoadBalancer
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-internal: "false"
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    udp:
      expose: ${expose_udp}
      rateLimit: 20
      port: 50000
      serviceType: LoadBalancer
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-internal: "false"
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    healthCheck:
      initialDelaySeconds: 3
      periodSeconds: 3
      failureThreshold: 3
      timeoutSeconds: 5
  allocator:
    install: true
    apiServerQPS: 400
    apiServerQPSBurst: 500
    logLevel: info
    annotations: {}
    resources: {}
      # requests:
      #   cpu: 1
      #   memory: 256Mi
    nodeSelector:
      kubernetes.io/os: linux
    healthCheck:
      initialDelaySeconds: 3
      periodSeconds: 3
      failureThreshold: 3
      timeoutSeconds: 1
    tolerations:
      - key: "agones.dev/agones-system"
        operator: "Equal"
        value: "true"
        effect: "NoExecute"
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: agones.dev/agones-system
                  operator: Exists
    replicas: 3
    http:
      port: 443
      serviceType: LoadBalancer
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-internal: "false"
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    generateTLS: true
    generateClientTLS: true
    disableMTLS: false
    disableTLS: false
    remoteAllocationTimeout: 10s
    totalRemoteAllocationTimeout: 30s
  image:
    registry: gcr.io/agones-images
    tag: 1.15.0
    controller:
      name: agones-controller
      pullPolicy: IfNotPresent
    sdk:
      name: agones-sdk
      cpuRequest: 30m
      cpuLimit: 0
      memoryRequest: 0
      memoryLimit: 0
      alwaysPull: false
    ping:
      name: agones-ping
      pullPolicy: IfNotPresent
    allocator:
      name: agones-allocator
      pullPolicy: IfNotPresent

gameservers:
  namespaces:
    - default
  minPort: 7000
  maxPort: 8000
  podPreserveUnknownFields: false

helm:
  installTests: false