apiVersion: apps/v1
kind: Deployment
metadata:
  name: fargate-app2-nginx-deployment
  labels:
    app: fargate-app2-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fargate-app2-nginx
      WorkerType: fargate
  template:
    metadata:
      labels:
        app: fargate-app2-nginx
        WorkerType: fargate
    spec:
      containers:
        - name: app2-nginx
          image: stacksimplify/kube-nginxapp2:1.0.0
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: fargate-app2-nginx-nodeport-service
  labels:
    app: fargate-app2-nginx
    WorkerType: fargate
  annotations:
    #Important Note:  Need to add health check path annotations in service level if we are planning to use multiple targets in a load balancer
    alb.ingress.kubernetes.io/healthcheck-path: /app2/index.html
spec:
  type: NodePort
  selector:
    app: fargate-app2-nginx
    WorkerType: fargate
  ports:
    - port: 80
      targetPort: 80
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fargate-app1-nginx-deployment
  labels:
    app: fargate-app1-nginx
    WorkerType: fargate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fargate-app1-nginx
  template:
    metadata:
      labels:
        app: fargate-app1-nginx
        WorkerType: fargate
    spec:
      containers:
        - name: app1-nginx
          image: stacksimplify/kube-nginxapp1:1.0.0
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: fargate-app1-nginx-nodeport-service
  labels:
    app: fargate-app1-nginx
    WorkerType: fargate
  annotations:
    #Important Note:  Need to add health check path annotations in service level if we are planning to use multiple targets in a load balancer
    alb.ingress.kubernetes.io/healthcheck-path: /app1/index.html
spec:
  type: NodePort
  selector:
    app: fargate-app1-nginx
    WorkerType: fargate
  ports:
    - port: 80
      targetPort: 80
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-nginx-path-based
  labels:
    app: ingress-nginx-path-based
  annotations:
    # Ingress Core Settings
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    #Important Note:  Need to add health check path annotations in service level if we are planning to use multiple targets in a load balancer
    #alb.ingress.kubernetes.io/healthcheck-path: /usermgmt/health-status
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    # This is required for Fargate
    alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
    - http:
        paths:
          - path: /app1/index.html
            pathType: Prefix
            backend:
              service:
                name: fargate-app1-nginx-nodeport-service
                port:
                  number: 80
          - path: /app2/index.html
            pathType: Prefix
            backend:
              service:
                name: fargate-app2-nginx-nodeport-service
                port:
                  number: 80